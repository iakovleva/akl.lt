---
- hosts: all
  sudo: yes
  gather_facts: yes


  vars:
    home: /opt/akl.lt
    path: "{{ home }}/app"


  tasks:

  - fail: msg="Ansible version 1.9 or greater required."
    when: ansible_version.full | version_compare('1.9', '<')

  - name: update locale
    locale_gen: name=en_US.UTF-8 state=present

  - name: apt packages
    apt: pkg={{ item }} state=latest
    with_items:
    - build-essential
    - postgresql
    - python-psycopg2
    - python-dev
    - python-pip
    - nginx
    - git

  - name: install uwsgi
    apt: pkg={{ item }} state=latest
    with_items:
    - uwsgi
    - uwsgi-plugin-python3
    notify: restart uwsgi

  - name: create akl user
    user: name=akl system=yes group=www-data home={{ home }}

  - name: postgresql database
    postgresql_db: >
      name=akllt
      encoding='UTF-8'
      lc_collate='C.UTF-8'
      lc_ctype='C.UTF-8'
      template='template0'
    sudo_user: postgres

  - name: postgresql user
    postgresql_user: db=akllt name=akl priv=ALL
    sudo_user: postgres

  - name: clone repository
    git: repo=https://github.com/python-dirbtuves/akl.lt.git dest={{ path }} force=yes
    notify: reload uwsgi
    sudo_user: akl

  - name: install app dependencies
    command: make ubuntu chdir={{ path }}

  - name: init buildout
    template: src=templates/buildout.cfg dest={{ path }}/buildout.cfg
    sudo_user: akl

  - name: build project
    command: make chdir={{ path }}
    sudo_user: akl

  - name: migrate database
    command: bin/django migrate --noinput chdir={{ path }}
    sudo_user: akl

  - name: collectstatic
    command: bin/django collectstatic --noinput chdir={{ path }}
    sudo_user: akl

  - name: set up uwsgi
    template: src=templates/uwsgi.ini dest=/etc/uwsgi/apps-enabled/akl.lt.ini

  - name: set up nginx
    template: src=templates/nginx.conf dest=/etc/nginx/sites-enabled/akl.lt.conf
    notify: reload nginx

  - name: create log dir
    file: path=/var/log/nginx/akl.lt state=directory
    tags: debug

  - name: start nginx
    service: name=nginx state=started


  handlers:

  - name: reload uwsgi
    service: name=uwsgi state=reloaded args=akl.lt

  - name: restart uwsgi
    service: name=uwsgi state=restarted args=akl.lt

  - name: reload nginx
    service: name=nginx state=reloaded
